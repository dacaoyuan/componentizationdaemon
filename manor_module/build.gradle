println isDebug.toBoolean()

if (isDebug.toBoolean()) {
    apply plugin: 'com.android.application'
    apply plugin: 'com.alibaba.arouter'
} else {
    apply plugin: 'com.android.library'

}


android {
    compileSdkVersion setup.compileSdkVersion
    buildToolsVersion setup.buildToolsVersion

    defaultConfig {
        if (isDebug.toBoolean()) {
            applicationId "com.example.componentizationdaemon"
        } 


        minSdkVersion setup.minSdkVersion
        targetSdkVersion setup.targetSdkVersion
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        resourcePrefix "manor_"

        if (isDebug.toBoolean()) {
            buildConfigField 'boolean', 'isDebug', 'true'
        } else {
            buildConfigField 'boolean', 'isDebug', 'false'
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }




    sourceSets {
        main {
            if (isDebug.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:${versions.supportLib}"
    compile "com.alibaba:arouter-api:${arouterVersion.arouter_api}"
    annotationProcessor "com.alibaba:arouter-compiler:${arouterVersion.arouter_compiler}"


    compile project(':mylibrary')
    if (isDebug.toBoolean()) {

    } else {

    }
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}
